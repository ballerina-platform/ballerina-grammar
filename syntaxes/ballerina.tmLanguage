<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>name</key>
    <string>Ballerina</string>
    <key>scopeName</key>
    <string>source.ballerina</string>
    <key>fileTypes</key>
    <array>
      <string>bal</string>
    </array>
    <key>uuid</key>
    <string>c01f5512-489a-41bd-ba5d-caf4b55ae3b3</string>
    <key>monarchVariables</key>
    <dict>
      <key>typeScope</key>
      <string>type</string>
      <key>annotationScope</key>
      <string>type</string>
      <key>numberScope</key>
      <string>number</string>
      <key>xmlTagAngle</key>
      <string>tag</string>
      <key>xmlAttribute</key>
      <string>variable.parameter</string>
      <key>xmlTag</key>
      <string>tag</string>
      <key>primitiveScope</key>
      <string>type</string>
    </dict>
    <key>tmlVariables</key>
    <dict>
      <key>typeScope</key>
      <string>storage.type.ballerina</string>
      <key>annotationScope</key>
      <string>support.type.ballerina</string>
      <key>numberScope</key>
      <string>constant.numeric.decimal.ballerina</string>
      <key>xmlTagAngle</key>
      <string>punctuation.definition.tag.begin.xml.ballerina</string>
      <key>xmlAttribute</key>
      <string>entity.other.attribute-name.xml.ballerina</string>
      <key>xmlTag</key>
      <string>entity.name.tag.xml.ballerina</string>
      <key>primitiveScope</key>
      <string>support.type.primitive.ballerina</string>
    </dict>
    <key>patterns</key>
    <array>
      <dict>
        <key>include</key>
        <string>#statements</string>
      </dict>
    </array>
    <key>repository</key>
    <dict>
      <key>statements</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#stringTemplate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#control-statement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decl-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-semicolon</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mdDocumentation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotationAttachment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
        </array>
      </dict>
      <key>declaration</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#import-declaration</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#var-expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#typeDefinition</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-defn</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#service-decl</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#class-defn</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#enum-decl</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#source</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
        </array>
      </dict>
      <key>control-statement</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(return)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.control.flow.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[;}]|$|;|^\s*$|(?:^\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\b))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#for-loop</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#if-statement</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.conditional.ballerina</string>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(else|if)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
          </dict>
        </array>
      </dict>
      <key>expression</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expressionWithoutIdentifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
        </array>
      </dict>
      <key>expressionWithoutIdentifiers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#xml</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#stringTemplate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#object-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#ternary-expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression-operators</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#paranthesised</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
        </array>
      </dict>
      <key>object-literal</key>
      <dict>
        <key>name</key>
        <string>meta.objectliteral.ballerina</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#object-member</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>import-declaration</key>
      <dict>
        <key>name</key>
        <string>meta.import.ballerina</string>
        <key>begin</key>
        <string>\bimport\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.import.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\;</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.terminator.statement.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\')([_$[:alpha:]][_$[:alnum:]]*)</string>
            <key>name</key>
            <string>variable.other.property.ballerina</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#import-clause</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-accessor</string>
          </dict>
        </array>
      </dict>
      <key>identifiers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?x)(?:(?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\s*=\s*(
  ((
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((
    ((&lt;\s*$)|((&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?[\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |

# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.optional.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*(\#?[_$[:alpha:]][_$[:alnum:]]*)\s*(?=\()</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.optional.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?:(\.)|(\?\.(?!\s*[[:digit:]])))\s*(\#?[_$[:alpha:]][_$[:alnum:]]*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.optional.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.property.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-primitive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#self-literal</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.ballerina</string>
            <key>match</key>
            <string>\b(check|foreach|if|checkpanic)\b</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#natural-expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#call</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.type.primitive.ballerina</string>
            <key>match</key>
            <string>\b(var)\b</string>
          </dict>
          <dict>
            <key>match</key>
            <string>([_$[:alpha:]][_$[:alnum:]]*)((\.)([_$[:alpha:]][_$[:alnum:]]*)(\()(\)))?</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.other.readwrite.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.ballerina</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.ballerina</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.parameters.begin.ballerina</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.parameters.end.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(\')([_$[:alpha:]][_$[:alnum:]]*)</string>
            <key>name</key>
            <string>variable.other.property.ballerina</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-annotation</string>
          </dict>
        </array>
      </dict>
      <key>object-member</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-defn</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina meta.object-literal.key.ballerina</string>
            <key>begin</key>
            <string>(?=\[)</string>
            <key>end</key>
            <string>(?=:)|((?&lt;=[\]])(?=\s*[\(\&lt;]))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina meta.object-literal.key.ballerina</string>
            <key>begin</key>
            <string>(?=[\'\"\`])</string>
            <key>end</key>
            <string>(?=:)|((?&lt;=[\'\"\`])(?=((\s*[\(\&lt;,}])|(\n*})|(\s+(as)\s+))))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina meta.object-literal.key.ballerina</string>
            <key>begin</key>
            <string>(?x)(?=(\b(?&lt;!\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:b|B)[01][01_]*(n)?\b(?!\$))|(\b(?&lt;!\$)0(?:o|O)?[0-7][0-7_]*(n)?\b(?!\$))|((?&lt;!\$)(?:
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)| # 1.1E+3
  (?:\b[0-9][0-9_]*(\.)[eE][+-]?[0-9][0-9_]*(n)?\b)|             # 1.E+3
  (?:\B(\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|             # .1E+3
  (?:\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\b)|                 # 1E+3
  (?:\b[0-9][0-9_]*(\.)[0-9][0-9_]*(n)?\b)|                      # 1.1
  (?:\b[0-9][0-9_]*(\.)(n)?\B)|                                  # 1.
  (?:\B(\.)[0-9][0-9_]*(n)?\b)|                                  # .1
  (?:\b[0-9][0-9_]*(n)?\b(?!\.))                                 # 1
)(?!\$)))</string>
            <key>end</key>
            <string>(?=:)|(?=\s*([\(\&lt;,}])|(\s+as\s+))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#numbers</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.method.declaration.ballerina</string>
            <key>begin</key>
            <string>(?&lt;=[\]\'\"\`])(?=\s*[\(\&lt;])</string>
            <key>end</key>
            <string>(?=\}|;|,)|(?&lt;=\})</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#function-body</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina</string>
            <key>match</key>
            <string>(?![_$[:alpha:]])([[:digit:]]+)\s*(?=(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*:)</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.object-literal.key.ballerina</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>constant.numeric.decimal.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina</string>
            <key>match</key>
            <string>(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\s*(?=(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*:(\s*\/\*([^\*]|(\*[^\/]))*\*\/)*\s*(
  ((
    (function\s*[(&lt;*]) |
    (function\s+) |
    ([_$[:alpha:]][_$[:alnum:]]*\s*=&gt;)
  )) |
  ((
    ((&lt;\s*$)|((&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?[\(]\s*((([\{\[]\s*)?$)|((\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})\s*((:\s*\{?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))|((\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])\s*((:\s*\[?$)|((\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+\s*)?=\s*)))))) |
    # sure shot arrow functions even if =&gt; is on new line
(
  (&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?
  [(]\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*
  (
    ([)]\s*:) |                                                                                       # ():
    ((\.\.\.\s*)?[_$[:alpha:]][_$[:alnum:]]*\s*:)                                                                  # [(]param: | [(]...param:
  )
) |

# arrow function possible to detect only with =&gt; on same line
(
  (&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;]|\&lt;\s*([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\]))([^=&lt;&gt;]|=[^&lt;])*\&gt;)*\&gt;)*&gt;\s*)?                                                                                 # typeparameters
  \(\s*(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*(([_$[:alpha:]]|(\{([^\{\}]|(\{([^\{\}]|\{[^\{\}]*\})*\}))*\})|(\[([^\[\]]|(\[([^\[\]]|\[[^\[\]]*\])*\]))*\])|(\.\.\.\s*[_$[:alpha:]]))([^()\'\"\`]|(\(([^\(\)]|(\(([^\(\)]|\([^\(\)]*\))*\)))*\))|(\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`))*)?\)   # parameters
  (\s*:\s*([^&lt;&gt;\(\)\{\}]|\&lt;([^&lt;&gt;]|\&lt;([^&lt;&gt;]|\&lt;[^&lt;&gt;]+\&gt;)+\&gt;)+\&gt;|\([^\(\)]+\)|\{[^\{\}]+\})+)?                                                                        # return type
  \s*=&gt;                                                                                               # arrow operator
)
  ))
)))</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.object-literal.key.ballerina</string>
              </dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina</string>
            <key>match</key>
            <string>(?:[_$[:alpha:]][_$[:alnum:]]*)\s*(?=(\/\*([^\*]|(\*[^\/]))*\*\/\s*)*:)</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.object-literal.key.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina</string>
            <key>begin</key>
            <string>\.\.\.</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.spread.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=,|\})</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina</string>
            <key>match</key>
            <string>([_$[:alpha:]][_$[:alnum:]]*)\s*(?=,|\}|$|\/\/|\/\*)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.other.readwrite.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina</string>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(as)\s+(const)(?=\s*([,}]|$))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.as.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>storage.modifier.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina</string>
            <key>begin</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(as)\s+</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.as.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[;),}\]:?\-\+\&gt;]|\|\||\&amp;\&amp;|\!\=\=|$|^|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(as)\s+))</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.object.member.ballerina</string>
            <key>begin</key>
            <string>(?=[_$[:alpha:]][_$[:alnum:]]*\s*=)</string>
            <key>end</key>
            <string>(?=,|\}|$|\/\/|\/\*)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>expression-operators</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.compound.ballerina</string>
            <key>match</key>
            <string>\*=|(?&lt;!\()/=|%=|\+=|\-=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.compound.bitwise.ballerina</string>
            <key>match</key>
            <string>\&amp;=|\^=|&lt;&lt;=|&gt;&gt;=|&gt;&gt;&gt;=|\|=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.bitwise.shift.ballerina</string>
            <key>match</key>
            <string>&lt;&lt;|&gt;&gt;&gt;|&gt;&gt;</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.comparison.ballerina</string>
            <key>match</key>
            <string>===|!==|==|!=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.relational.ballerina</string>
            <key>match</key>
            <string>&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?&lt;=[_$[:alnum:]])(\!)\s*(?:(/=)|(?:(/)(?![/*])))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.logical.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.assignment.compound.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.arithmetic.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.logical.ballerina</string>
            <key>match</key>
            <string>\!|&amp;&amp;|\|\||\?\?</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.bitwise.ballerina</string>
            <key>match</key>
            <string>\&amp;|~|\^|\|</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.assignment.ballerina</string>
            <key>match</key>
            <string>\=</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.decrement.ballerina</string>
            <key>match</key>
            <string>--</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.increment.ballerina</string>
            <key>match</key>
            <string>\+\+</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.arithmetic.ballerina</string>
            <key>match</key>
            <string>%|\*|/|-|\+</string>
          </dict>
        </array>
      </dict>
      <key>punctuation-comma</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>punctuation.separator.comma.ballerina</string>
            <key>match</key>
            <string>,</string>
          </dict>
        </array>
      </dict>
      <key>punctuation-semicolon</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>;</string>
            <key>name</key>
            <string>punctuation.terminator.statement.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>punctuation-accessor</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?:(\.)|(\?\.(?!\s*[[:digit:]])))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.optional.ballerina</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>annotationAttachment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(@)((?:[_$[:alpha:]][_$[:alnum:]]*))\s*(:?)\s*((?:[_$[:alpha:]][_$[:alnum:]]*)?)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.decorator.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.type.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.decorator.ballerina</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>support.type.ballerina</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>annotationDefinition</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\bannotation\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>;</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>booleans</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\b(true|false)\b</string>
            <key>name</key>
            <string>constant.language.boolean.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>butExp</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\bbut\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\}</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina.documentation</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#butExpBody</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>butExpBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina.documentation</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\})</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina.documentation</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameter</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#butClause</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>butClause</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>=&gt;</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.arrow.ballerina storage.type.function.arrow.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>,|(?=\})</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>call</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?:\')?([_$[:alpha:]][_$[:alnum:]]*)\s*(?=\()</string>
            <key>name</key>
            <string>entity.name.function.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>comment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>comment.ballerina</string>
            <key>match</key>
            <string>\/\/.*</string>
          </dict>
        </array>
      </dict>
      <key>constrainType</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>&lt;</string>
            <key>end</key>
            <string>&gt;</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.parameters.begin.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.parameters.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#constrainType</string>
              </dict>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
                <key>match</key>
                <string>\b([_$[:alpha:]][_$[:alnum:]]*)\b</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>tupleType</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\[</string>
            <key>end</key>
            <string>(?=\]|;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#constrainType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#paranthesisedBracket</string>
              </dict>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
                <key>match</key>
                <string>\b([_$[:alpha:]][_$[:alnum:]]*)\b</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>decl-block</key>
      <dict>
        <key>name</key>
        <string>meta.block.ballerina</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\} external;)|(\})</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#statements</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mdDocumentation</string>
          </dict>
        </array>
      </dict>
      <key>defaultValue</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>[=:]</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[,)])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>documentationDef</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\b(?:documentation|deprecated)\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\}</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>delimiter.curly</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#documentationBody</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>documentationBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina.documentation</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\})</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina.documentation</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>(P|R|T|F|V)({{)(.*)(}})</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.other.ballerina.documentation</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.other.ballerina.documentation</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>variable.parameter.ballerina.documentation</string>
                  </dict>
                  <key>4</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.other.ballerina.documentation</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>name</key>
                <string>comment.block.code.ballerina.documentation</string>
                <key>begin</key>
                <string>\```</string>
                <key>end</key>
                <string>\```</string>
              </dict>
              <dict>
                <key>name</key>
                <string>comment.block.code.ballerina.documentation</string>
                <key>begin</key>
                <string>\``</string>
                <key>end</key>
                <string>\``</string>
              </dict>
              <dict>
                <key>name</key>
                <string>comment.block.code.ballerina.documentation</string>
                <key>begin</key>
                <string>\`</string>
                <key>end</key>
                <string>\`</string>
              </dict>
              <dict>
                <key>name</key>
                <string>comment.block.ballerina.documentation</string>
                <key>match</key>
                <string>.</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>enum-decl</key>
      <dict>
        <key>name</key>
        <string>meta.enum.declaration.ballerina</string>
        <key>begin</key>
        <string>(?:\b(const)\s+)?\b(enum)\s+([_$[:alpha:]][_$[:alnum:]]*)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>storage.modifier.ballerina</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
          </dict>
          <key>3</key>
          <dict>
            <key>name</key>
            <string>entity.name.type.enum.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mdDocumentation</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\}</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#mdDocumentation</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>variable.other.enummember.ballerina</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=,|\}|$)</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#comment</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#variable-initializer</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>(?=((\'([^\'\\]|\\.)*\')|(\"([^\"\\]|\\.)*\")|(\`([^\`\\]|\\.)*\`)|(\[([^\[\]]|\[[^\[\]]*\])+\])))</string>
                <key>end</key>
                <string>(?=,|\}|$)</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#string</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#array-literal</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#comment</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#variable-initializer</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>errorDestructure</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>error</string>
            <key>end</key>
            <string>(?==&gt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>callableUnitBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>end</key>
            <string>(?=\})</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#workerDef</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#service-decl</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#objectDec</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#function-defn</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#forkStatement</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>for-loop</key>
      <dict>
        <key>begin</key>
        <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))foreach\s*</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.control.loop.ballerina</string>
          </dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>support.type.primitive.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?=\{)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
            <key>match</key>
            <string>\bin\b</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#var-expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>forkBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>end</key>
            <string>(?=\})</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#workerDef</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>forkStatement</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\bfork\b</string>
            <key>end</key>
            <string>\}</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.control.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#forkBody</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>function-body</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#functionParameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decl-block</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\=&gt;</string>
            <key>name</key>
            <string>meta.block.ballerina</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>meta.arrow.ballerina storage.type.function.arrow.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\;)|(?=\,)|(?=)(?=\);)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#natural-expr</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#statements</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.generator.asterisk.ballerina</string>
            <key>match</key>
            <string>\*</string>
          </dict>
        </array>
      </dict>
      <key>natural-expr</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>natural</string>
            <key>end</key>
            <string>(?=\})</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#natural-expr-body</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>natural-expr-body</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>contentName</key>
            <string>string.template.ballerina</string>
            <key>end</key>
            <string>(?=\})</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#template-substitution-element</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string-character-escape</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#templateVariable</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>function-defn</key>
      <dict>
        <key>name</key>
        <string>meta.function.ballerina</string>
        <key>begin</key>
        <string>(?:(public|private)\s+)?(function\b)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
          </dict>
          <key>2</key>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\;)|(?&lt;=\})|(?&lt;=\,)|(?=)(?=\);)</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\bexternal\b</string>
            <key>name</key>
            <string>keyword.ballerina</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#stringTemplate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotationAttachment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#functionReturns</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#functionName</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#functionParameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-semicolon</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-body</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
        </array>
      </dict>
      <key>functionName</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
            <key>match</key>
            <string>\bfunction\b</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-primitive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#self-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\s+(\b(self)|\b(is|new|isolated|null|function|in)\b|(string|int|boolean|float|byte|decimal|json|xml|anydata)\b|\b(readonly|error|map)\b|([_$[:alpha:]][_$[:alnum:]]*))</string>
            <key>captures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.language.this.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>meta.definition.function.ballerina entity.name.function.ballerina</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>functionParameters</key>
      <dict>
        <key>name</key>
        <string>meta.parameters.ballerina</string>
        <key>begin</key>
        <string>\(|\[</string>
        <key>end</key>
        <string>\)|\]</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.begin.ballerina</string>
          </dict>
        </dict>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.parameters.end.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#function-parameters-body</string>
          </dict>
        </array>
      </dict>
      <key>function-parameters-body</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotationAttachment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#recordLiteral</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parameter-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#array-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-initializer</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.separator.parameter.ballerina</string>
            <key>match</key>
            <string>\,</string>
          </dict>
        </array>
      </dict>
      <key>parameter-name</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\s*\b(var)\s+</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?x)(?:(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))\s+)?(?:(\.\.\.)\s*)?(?&lt;!=|:)(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(this)|(string|int|boolean|float|byte|decimal|json|xml|anydata)|\b(is|new|isolated|null|function|in)\b|\b(true|false)\b|\b(check|foreach|if|checkpanic)\b|\b(readonly|error|map)\b|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))\s*(\??)</string>
            <key>captures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.rest.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>constant.language.boolean.ballerina</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>keyword.control.flow.ballerina</string>
              </dict>
              <key>7</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
              <key>8</key>
              <dict>
                <key>name</key>
                <string>variable.parameter.ballerina</string>
              </dict>
              <key>9</key>
              <dict>
                <key>name</key>
                <string>variable.parameter.ballerina</string>
              </dict>
              <key>10</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.optional.ballerina</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>functionReturns</key>
      <dict>
        <key>name</key>
        <string>meta.type.function.return.ballerina</string>
        <key>begin</key>
        <string>\s*(returns)\s*</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?==&gt;)|(\=)|(?=\{)|(\))|(?=\;)</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-primitive</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\s*\b(var)(?=\s+|\[|\?)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>\|</string>
            <key>name</key>
            <string>keyword.operator.ballerina</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\?</string>
            <key>name</key>
            <string>keyword.operator.optional.ballerina</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-annotation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-tuple</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>match</key>
            <string>[_$[:alpha:]][_$[:alnum:]]*</string>
            <key>name</key>
            <string>variable.other.readwrite.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>functionType</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\bfunction\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\,)|(?=\|)|(?=\:)|(?==&gt;)|(?=\))|(?=\])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#functionTypeParamList</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#functionTypeReturns</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>functionTypeParamList</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>end</key>
            <string>\)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>delimiter.parenthesis</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>delimiter.parenthesis</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>public</string>
                <key>name</key>
                <string>keyword</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#annotationAttachment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#recordLiteral</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#record</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#objectDec</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#functionType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#constrainType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#parameterTuple</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#functionTypeType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>functionTypeType</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>[_$[:alpha:]][_$[:alnum:]]*</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\,)|(?:\|)|(?=\])|(?=\))</string>
          </dict>
        </array>
      </dict>
      <key>functionTypeReturns</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\breturns\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\,)|(?:\|)|(?=\])|(?=\))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#functionTypeReturnsParameter</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>functionTypeReturnsParameter</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>((?=record|object|function)|(?:[_$[:alpha:]][_$[:alnum:]]*))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\,)|(?:\|)|(?:\:)|(?==&gt;)|(?=\))|(?=\])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#record</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#objectDec</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#functionType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#constrainType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#defaultValue</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#parameterTuple</string>
              </dict>
              <dict>
                <key>match</key>
                <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                <key>name</key>
                <string>default.variable.parameter.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>if-statement</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?=\bif\b\s*(?!\{))</string>
            <key>end</key>
            <string>(?&lt;=\})</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(if)\s*(\()?</string>
                <key>beginCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.conditional.ballerina</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>meta.brace.round.ballerina</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(\))|(?=\{)</string>
                <key>endCaptures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>meta.brace.round.ballerina</string>
                  </dict>
                </dict>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#decl-block</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#keywords</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#identifiers</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#type-primitive</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#xml</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#string</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#stringTemplate</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#comment</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#ternary-expression</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#expression-operators</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#literal</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#paranthesised</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#regex</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>begin</key>
                <string>(?&lt;=\))(?=\s|\=)</string>
                <key>end</key>
                <string>(?=\{)</string>
                <key>patterns</key>
                <array>
                  <dict>
                    <key>include</key>
                    <string>#literal</string>
                  </dict>
                  <dict>
                    <key>include</key>
                    <string>#keywords</string>
                  </dict>
                </array>
              </dict>
              <dict>
                <key>include</key>
                <string>#decl-block</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>import-clause</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?:(\bdefault)|(\*)|(\b[_$[:alpha:]][_$[:alnum:]]*))</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.control.default.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>variable.other.readwrite.ballerina meta.import.module.ballerina</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>keyword.control.default.ballerina</string>
              </dict>
              <key>6</key>
              <dict>
                <key>name</key>
                <string>variable.other.readwrite.alias.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>name</key>
            <string>variable.other.readwrite.alias.ballerina</string>
            <key>match</key>
            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
          </dict>
        </array>
      </dict>
      <key>maps</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>end</key>
            <string>\}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>matchStatementPatternClause</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>=&gt;</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>((\})|;|,)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#callableUnitBody</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>matchStatement</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\bmatch\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.control.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#matchStatementBody</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>matchStatementBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina.documentation</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\})</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina.documentation</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#literal</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#matchBindingPattern</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#matchStatementPatternClause</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>matchBindingPattern</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>var</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?==&gt;)|,</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#errorDestructure</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
              <dict>
                <key>match</key>
                <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                <key>name</key>
                <string>variable.parameter.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>mdDocumentation</key>
      <dict>
        <key>name</key>
        <string>comment.mddocs.ballerina</string>
        <key>begin</key>
        <string>\#</string>
        <key>end</key>
        <string>[\r\n]+</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#mdDocumentationReturnParamDescription</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mdDocumentationParamDescription</string>
          </dict>
        </array>
      </dict>
      <key>mdDocumentationParamDescription</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\+\s+)(\'?[_$[:alpha:]][_$[:alnum:]]*)(\s*\-\s+)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.other.readwrite.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[^#\r\n]|(?:# *?\+))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>#.*</string>
                <key>name</key>
                <string>comment.mddocs.paramdesc.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>mdDocumentationReturnParamDescription</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(#)(?: *?)(\+)(?: *)(return)(?: *)(-)?(.*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>comment.mddocs.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>comment.mddocs.returnparamdesc.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[^#\r\n]|(?:# *?\+))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>#.*</string>
                <key>name</key>
                <string>comment.mddocs.returnparamdesc.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>multiType</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?&lt;=\|)([_$[:alpha:]][_$[:alnum:]]*)|([_$[:alpha:]][_$[:alnum:]]*)(?=\|)</string>
            <key>name</key>
            <string>storage.type.ballerina</string>
          </dict>
          <dict>
            <key>match</key>
            <string>\|</string>
            <key>name</key>
            <string>keyword.operator.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>numbers</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>\b0[xX][\da-fA-F]+\b|\b\d+(?:\.(?:\d+|$))?</string>
            <key>name</key>
            <string>constant.numeric.decimal.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>class-body</key>
      <dict>
        <key>name</key>
        <string>meta.class.body.ballerina</string>
        <key>begin</key>
        <string>\{</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\}</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>punctuation.definition.block.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mdDocumentation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-defn</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#var-expr</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-initializer</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#access-modifier</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?&lt;=:)\s*</string>
            <key>end</key>
            <string>(?=\s|[;),}\]:\-\+]|;|^\s*$|(?:^\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\b))</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decl-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-semicolon</string>
          </dict>
        </array>
      </dict>
      <key>access-modifier</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(public|private)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            <key>name</key>
            <string>storage.modifier.ballerina keyword.other.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>class-defn</key>
      <dict>
        <key>name</key>
        <string>meta.class.ballerina</string>
        <key>begin</key>
        <string>(\s+)(class\b)|^class\b(?=\s+|/[/*])</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>storage.type.class.ballerina keyword.other.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>match</key>
            <string>[_$[:alpha:]][_$[:alnum:]]*</string>
            <key>captures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.class.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#class-body</string>
          </dict>
        </array>
      </dict>
      <key>objectDec</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\bobject\b(?!:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?&lt;=\})</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#decl-block</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>objectInitBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>end</key>
            <string>(?=\})</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>objectInitParameters</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>end</key>
            <string>\)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.parameters.begin.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.parameters.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\b([_$[:alpha:]][_$[:alnum:]]*)\b</string>
                <key>name</key>
                <string>variable.parameter.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>objectMemberFunctionDec</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\bfunction\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>;</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#functionParameters</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\breturns\b</string>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>paranthesised</key>
      <dict>
        <key>name</key>
        <string>meta.brace.round.block.ballerina</string>
        <key>begin</key>
        <string>\(</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\)</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.round.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#self-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#function-defn</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decl-block</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parameters</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotationAttachment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#recordLiteral</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#stringTemplate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#parameter-name</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#variable-initializer</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
        </array>
      </dict>
      <key>paranthesisedBracket</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\[</string>
            <key>end</key>
            <string>\]</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>parameters</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.flow.ballerina</string>
            <key>match</key>
            <string>\s*(return|break|continue|check|checkpanic|panic|trap|from|where)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
            <key>match</key>
            <string>\s*(let|select)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>punctuation.separator.parameter.ballerina</string>
            <key>match</key>
            <string>\,</string>
          </dict>
        </array>
      </dict>
      <key>record</key>
      <dict>
        <key>name</key>
        <string>meta.record.ballerina</string>
        <key>begin</key>
        <string>\brecord\b</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>(?&lt;=\})</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#recordBody</string>
          </dict>
        </array>
      </dict>
      <key>recordBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#decl-block</string>
          </dict>
        </array>
      </dict>
      <key>recordLiteral</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>end</key>
            <string>\}</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>serviceBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mdDocumentation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#documentationDef</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#decl-block</string>
          </dict>
        </array>
      </dict>
      <key>service-decl</key>
      <dict>
        <key>name</key>
        <string>meta.service.declaration.ballerina</string>
        <key>begin</key>
        <string>\bservice\b</string>
        <key>end</key>
        <string>(?=;|^\s*$|(?:^\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\b))|(?&lt;=\})|(?&lt;=\,)</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>keyword.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#class-defn</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#serviceName</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#serviceOn</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#serviceBody</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#objectDec</string>
          </dict>
        </array>
      </dict>
      <key>serviceName</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>name</key>
            <string>entity.service.path.ballerina</string>
            <key>match</key>
            <string>(\/([_$[:alpha:]][_$[:alnum:]]*)|\"[_$[:alpha:]][_$[:alnum:]]*\")</string>
          </dict>
        </array>
      </dict>
      <key>serviceOn</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>on</string>
            <key>end</key>
            <string>(?={)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>strings</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\"</string>
            <key>end</key>
            <string>\"</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.begin.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.character.escape.ballerina</string>
                <key>match</key>
                <string>\\.</string>
              </dict>
              <dict>
                <key>name</key>
                <string>string</string>
                <key>match</key>
                <string>.</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>string-character-escape</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>constant.character.escape.ballerina</string>
            <key>match</key>
            <string>\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\{[0-9A-Fa-f]+\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)</string>
          </dict>
        </array>
      </dict>
      <key>stringTemplate</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>string.template.ballerina</string>
            <key>begin</key>
            <string>((string)|([_$[:alpha:]][_$[:alnum:]]*))?(`)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.tagged-template.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.template.begin.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\\?`</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.template.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#template-substitution-element</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string-character-escape</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>template-substitution-element</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.template.expression.ballerina</string>
            <key>begin</key>
            <string>\$\{</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.template-expression.begin.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\}</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.template-expression.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
            <key>contentName</key>
            <string>meta.embedded.line.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>typeDefinition</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\btype\b)\s+([_$[:alpha:]][_$[:alnum:]]*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.type.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\;</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.terminator.statement.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#functionParameters</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#functionReturns</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#mdDocumentation</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#record</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#keywords</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#multiType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type-primitive</string>
              </dict>
              <dict>
                <key>match</key>
                <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                <key>name</key>
                <string>variable.other.readwrite.ballerina</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type-annotation</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#typeDescription</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#decl-block</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>typeDescription</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>[_$[:alpha:]][_$[:alnum:]]*</string>
            <key>end</key>
            <string>(?=;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#numbers</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#decl-block</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type-primitive</string>
              </dict>
              <dict>
                <key>match</key>
                <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>var-expr</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.var.expr.ballerina</string>
            <key>begin</key>
            <string>(?=\b(var))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.modifier.ballerina support.type.primitive.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?!\b(var))((?=;|}|;|^\s*$|(?:^\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\b))|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(?=(if)\s+))|((?&lt;!^string|[^\._$[:alnum:]]string|^int|[^\._$[:alnum:]]int)(?=\s*$)))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\b(var)(?=\s+|\[|\?|\||\:)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>support.type.primitive.ballerina</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=\S)</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\|</string>
                <key>name</key>
                <string>keyword.operator.type.annotation.ballerina</string>
              </dict>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
                <key>match</key>
                <string>\bin\b</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#stringTemplate</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#numbers</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#multiType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#self-literal</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#var-single-variable</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#variable-initializer</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type-annotation</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#keywords</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type-tuple</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#regex</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.var.expr.ballerina</string>
            <key>begin</key>
            <string>(?=\b(const(?!\s+enum\b)))</string>
            <key>end</key>
            <string>(?!\b(const(?!\s+enum\b)))((?=\bannotation\b|;|}|;|^\s*$|(?:^\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\b))|((?&lt;!^string|[^\._$[:alnum:]]string|^int|[^\._$[:alnum:]]int)(?=\s*$)))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>begin</key>
                <string>\b(const(?!\s+enum\b))\s+</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.other.ballerina</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=\S)</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#stringTemplate</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#var-single-const</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#variable-initializer</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type-annotation</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.var.expr.ballerina</string>
            <key>begin</key>
            <string>(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\s+|\[|\?|\||\:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?!\b(var))((?=;|}|;|^\s*$|(?:^\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\b))|((?&lt;!^string|[^\._$[:alnum:]]string|^int|[^\._$[:alnum:]]int)(?=\s*$)))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#xml</string>
              </dict>
              <dict>
                <key>begin</key>
                <string>(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\s+|\[|\?|\||\:)</string>
                <key>beginCaptures</key>
                <dict>
                  <key>0</key>
                  <dict>
                    <key>name</key>
                    <string>support.type.primitive.ballerina</string>
                  </dict>
                </dict>
                <key>end</key>
                <string>(?=\S)</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\|</string>
                <key>name</key>
                <string>keyword.operator.type.annotation.ballerina</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#stringTemplate</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#numbers</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#multiType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#var-single-variable</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#variable-initializer</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#punctuation-comma</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type-annotation</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#keywords</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type-tuple</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#regex</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>var-single-variable</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.var-single-variable.expr.ballerina</string>
            <key>begin</key>
            <string>((string|int|boolean|float|byte|decimal|json|xml|anydata)|\b(readonly|error|map)\b|([_$[:alpha:]][_$[:alnum:]]*))(?=\s+|\;|\&gt;|\|)</string>
            <key>beginCaptures</key>
            <dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>meta.definition.variable.ballerina variable.other.readwrite.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$|^|[;,=}])</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.terminator.statement.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#call</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#self-literal</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#if-statement</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#string</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#numbers</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#keywords</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.var-single-variable.expr.ballerina</string>
            <key>begin</key>
            <string>([_$[:alpha:]][_$[:alnum:]]*)\s+(\!)?</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.definition.variable.ballerina variable.other.readwrite.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.definiteassignment.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))\s+))</string>
          </dict>
        </array>
      </dict>
      <key>var-single-const</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.var-single-variable.expr.ballerina</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>\b(var)\s*</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\S)</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>begin</key>
            <string>([_$[:alpha:]][_$[:alnum:]]*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>meta.definition.variable.ballerina variable.other.constant.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$|^|[;,=}]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))\s+))</string>
          </dict>
        </array>
      </dict>
      <key>variable-initializer</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?&lt;!=|!)(=)(?!=|&gt;)(?=\s*\S)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.assignment.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=$|[,);}\]])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>(\')([_$[:alpha:]][_$[:alnum:]]*)</string>
                <key>name</key>
                <string>variable.other.property.ballerina</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#xml</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#function-defn</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#punctuation-accessor</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#regex</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>begin</key>
            <string>(?&lt;!=|!)(=)(?!=|&gt;)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.assignment.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=[,);}\]]|((?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))\s+))|(?=^\s*$)|(?&lt;=\S)(?&lt;!=)(?=\s*$)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#expression</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>variableDef</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?:(?!\+)[_$[:alpha:]][_$[:alnum:]]*)(?: |\t)|(?=\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?:[_$[:alpha:]][_$[:alnum:]]*)|(?=\,)|(?=;)|\.\.\.</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#tupleType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#constrainType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>variableDefInline</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(?=record)|(?=object)</string>
            <key>end</key>
            <string>(?=;)</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#record</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#objectDec</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>workerDef</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\bworker\b</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\}</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#functionReturns</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#workerBody</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>workerBody</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\{</string>
            <key>end</key>
            <string>(?=\})</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>parameter</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>((?=record|object|function)|([_$[:alpha:]][_$[:alnum:]]*)(?=\|)|(?:[_$[:alpha:]][_$[:alnum:]]*))</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?:\,)|(?:\|)|(?:\:)|(?==&gt;)|(?=\))|(?=\])</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameterWithDescriptor</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#record</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#objectDec</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#functionType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#constrainType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#defaultValue</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#parameterTuple</string>
              </dict>
              <dict>
                <key>match</key>
                <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                <key>name</key>
                <string>default.variable.parameter.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>parameterTuple</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\[</string>
            <key>end</key>
            <string>(?=\,)|(?=\|)|(?=\:)|(?==&gt;)|(?=\))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#record</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#objectDec</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#parameterTupleType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#parameterTupleEnd</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#comment</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>parameterTupleType</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>[_$[:alpha:]][_$[:alnum:]]*</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>storage.type.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?:\,)|(?:\|)|(?=\])</string>
          </dict>
        </array>
      </dict>
      <key>parameterTupleEnd</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\]</string>
            <key>end</key>
            <string>(?=\,)|(?=\|)|(?=\:)|(?==&gt;)|(?=\))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#defaultWithParentheses</string>
              </dict>
              <dict>
                <key>match</key>
                <string>[_$[:alpha:]][_$[:alnum:]]*</string>
                <key>name</key>
                <string>default.variable.parameter.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>parameterWithDescriptor</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\&amp;</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\,)|(?=\|)|(?=\))</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#parameter</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>defaultWithParentheses</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\(</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.block.ballerina</string>
              </dict>
            </dict>
          </dict>
        </array>
      </dict>
      <key>string</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>"</string>
            <key>name</key>
            <string>string.quoted.double.ballerina</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.begin.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(")|((?:[^\\\n])$)</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.end.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>invalid.illegal.newline.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#string-character-escape</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>source</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\bsource\b)\s+([_$[:alpha:]][_$[:alnum:]]*)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>variable.other.readwrite.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?=\,)|(?=\;)</string>
          </dict>
        </array>
      </dict>
      <key>types</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>storage.type.ballerina</string>
            <key>match</key>
            <string>\b(handle|any|future|typedesc)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>support.type.primitive.ballerina</string>
            <key>match</key>
            <string>\b(boolean|int|string|float|decimal|byte|json|xml|anydata)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.ballerina</string>
            <key>match</key>
            <string>\b(map|error|never|readonly|distinct)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>storage.type.ballerina</string>
            <key>match</key>
            <string>\b(stream)\b</string>
          </dict>
        </array>
      </dict>
      <key>xml</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\bxml)(\s*)(`)</string>
            <key>name</key>
            <string>string.template.ballerina</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.template.begin.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>`</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.string.template.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#xmlTag</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#xmlComment</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#templateVariable</string>
              </dict>
              <dict>
                <key>name</key>
                <string>string</string>
                <key>match</key>
                <string>.</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>xmlTag</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(&lt;\/?\??)\s*([-_a-zA-Z0-9]+)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.tag.begin.xml.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>entity.name.tag.xml.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>\??\/?&gt;</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.tag.end.xml.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#xmlSingleQuotedString</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#xmlDoubleQuotedString</string>
              </dict>
              <dict>
                <key>name</key>
                <string>keyword.other.ballerina</string>
                <key>match</key>
                <string>xmlns</string>
              </dict>
              <dict>
                <key>name</key>
                <string>entity.other.attribute-name.xml.ballerina</string>
                <key>match</key>
                <string>([a-zA-Z0-9-]+)</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>xmlComment</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>&lt;!--</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>comment.block.xml.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>--&gt;</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>comment.block.xml.ballerina</string>
              </dict>
            </dict>
            <key>name</key>
            <string>comment.block.xml.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>xmlSingleQuotedString</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\'</string>
            <key>end</key>
            <string>\'</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.begin.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.character.escape.ballerina</string>
                <key>match</key>
                <string>\\.</string>
              </dict>
              <dict>
                <key>name</key>
                <string>string</string>
                <key>match</key>
                <string>.</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>xmlDoubleQuotedString</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\"</string>
            <key>end</key>
            <string>\"</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.begin.ballerina</string>
              </dict>
            </dict>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>string.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.character.escape.ballerina</string>
                <key>match</key>
                <string>\\.</string>
              </dict>
              <dict>
                <key>name</key>
                <string>string</string>
                <key>match</key>
                <string>.</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>templateVariable</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>\${</string>
            <key>beginCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>constant.character.escape.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>}</string>
            <key>endCaptures</key>
            <dict>
              <key>0</key>
              <dict>
                <key>name</key>
                <string>constant.character.escape.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#code</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>ternary-expression</key>
      <dict>
        <key>begin</key>
        <string>(?!\?\.\s*[^[:digit:]])(\?)(?!\?)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.ternary.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\s*</string>
        <key>endCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>keyword.operator.ternary.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
        </array>
      </dict>
      <key>type</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#string</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-primitive</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-tuple</string>
          </dict>
        </array>
      </dict>
      <key>type-annotation</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>meta.type.annotation.ballerina</string>
            <key>begin</key>
            <string>(\:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.type.annotation.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(?&lt;![:|&amp;])((?=$|^|[,);\}\]\?\&gt;\=&gt;]|//)|(?==[^&gt;])|((?&lt;=[\}&gt;\]\)]|[_$[:alpha:]])\s*(?=\{)))(\?)?</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#booleans</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#stringTemplate</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#regex</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#self-literal</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#xml</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#call</string>
              </dict>
              <dict>
                <key>match</key>
                <string>\b(is|new|isolated|null|function|in)\b|\b(true|false)\b|\b(check|foreach|if|checkpanic)\b|\b(readonly|error|map)\b|\b(var)\b|([_$[:alpha:]][_$[:alnum:]]*)((\.)([_$[:alpha:]][_$[:alnum:]]*)(\()(\)))?</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.other.ballerina</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>constant.language.boolean.ballerina</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>keyword.control.ballerina</string>
                  </dict>
                  <key>4</key>
                  <dict>
                    <key>name</key>
                    <string>storage.type.ballerina</string>
                  </dict>
                  <key>5</key>
                  <dict>
                    <key>name</key>
                    <string>support.type.primitive.ballerina</string>
                  </dict>
                  <key>6</key>
                  <dict>
                    <key>name</key>
                    <string>variable.other.readwrite.ballerina</string>
                  </dict>
                  <key>8</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.accessor.ballerina</string>
                  </dict>
                  <key>9</key>
                  <dict>
                    <key>name</key>
                    <string>entity.name.function.ballerina</string>
                  </dict>
                  <key>10</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.parameters.begin.ballerina</string>
                  </dict>
                  <key>11</key>
                  <dict>
                    <key>name</key>
                    <string>punctuation.definition.parameters.end.ballerina</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>name</key>
                <string>keyword.operator.optional.ballerina</string>
                <key>match</key>
                <string>\?</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#multiType</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#type</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#paranthesised</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>type-tuple</key>
      <dict>
        <key>name</key>
        <string>meta.type.tuple.ballerina</string>
        <key>begin</key>
        <string>\[</string>
        <key>beginCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#self-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#booleans</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.rest.ballerina</string>
            <key>match</key>
            <string>\.\.\.</string>
          </dict>
          <dict>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))([_$[:alpha:]][_$[:alnum:]]*)\s*(\?)?\s*(:)</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>entity.name.label.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.optional.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.separator.label.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>include</key>
            <string>#identifiers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>keywords</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.ballerina</string>
            <key>match</key>
            <string>\b(fork|join|while|returns|transaction|transactional|retry|commit|rollback|typeof|enum|wait|match)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.control.flow.ballerina</string>
            <key>match</key>
            <string>\b(return|break|continue|check|checkpanic|panic|trap|from|where)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
            <key>match</key>
            <string>\b(public|private|external|return|record|object|remote|abstract|client|true|false|fail|import|version)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
            <key>match</key>
            <string>\b(as|on|function|resource|listener|const|final|is|null|lock|annotation|source|worker|parameter|field|isolated|in)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
            <key>match</key>
            <string>\b(xmlns|table|key|let|new|select|start|flush|default|do|base16|base64|conflict)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.other.ballerina</string>
            <key>match</key>
            <string>\b(limit|outer|equals|order|by|ascending|descending|class|configurable|variable|module|service|group|collect)\b</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.arrow.ballerina storage.type.function.arrow.ballerina</string>
            <key>match</key>
            <string>(=&gt;)</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.ballerina</string>
            <key>match</key>
            <string>(!|%|\+|\-|~=|===|==|=|!=|!==|&lt;|&gt;|&amp;|\||\?:|\.\.\.|&lt;=|&gt;=|&amp;&amp;|\|\||~|&gt;&gt;|&gt;&gt;&gt;)</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#types</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#self-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#type-primitive</string>
          </dict>
        </array>
      </dict>
      <key>literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#booleans</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#maps</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#self-literal</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#array-literal</string>
          </dict>
        </array>
      </dict>
      <key>array-literal</key>
      <dict>
        <key>name</key>
        <string>meta.array.literal.ballerina</string>
        <key>begin</key>
        <string>\s*(\[)</string>
        <key>beginCaptures</key>
        <dict>
          <key>1</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.ballerina</string>
          </dict>
        </dict>
        <key>end</key>
        <string>\]</string>
        <key>endCaptures</key>
        <dict>
          <key>0</key>
          <dict>
            <key>name</key>
            <string>meta.brace.square.ballerina</string>
          </dict>
        </dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#expression</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#punctuation-comma</string>
          </dict>
        </array>
      </dict>
      <key>self-literal</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(\bself\b)\s*(.)\s*([_$[:alpha:]][_$[:alnum:]]*)\s*(?=\()</string>
            <key>captures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>variable.language.this.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.accessor.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>entity.name.function.ballerina</string>
              </dict>
            </dict>
          </dict>
          <dict>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))self\b(?!\$)</string>
            <key>name</key>
            <string>variable.language.this.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>code</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>include</key>
            <string>#booleans</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#matchStatement</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#butExp</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#xml</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#stringTemplate</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#keywords</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#strings</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#comment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#mdDocumentation</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#annotationAttachment</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#numbers</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#maps</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#paranthesised</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#paranthesisedBracket</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex</string>
          </dict>
        </array>
      </dict>
      <key>type-primitive</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(?&lt;![_$[:alnum:]])(?:(?&lt;=\.\.\.)|(?&lt;!\.))(string|int|boolean|float|byte|decimal|json|xml|anydata)(?![_$[:alnum:]])(?:(?=\.\.\.)|(?!\.))</string>
            <key>name</key>
            <string>support.type.primitive.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>regex</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\bre)(\s*)(`)</string>
            <key>name</key>
            <string>regexp.template.ballerina</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>support.type.primitive.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.regexp.template.begin.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>`</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.regexp.template.end.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#template-substitution-element</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>regexp</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.control.assertion.regexp.ballerina</string>
            <key>match</key>
            <string>\^|\$</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.quantifier.regexp.ballerina</string>
            <key>match</key>
            <string>[?+*]|\{(\d+,\d+|\d+,|,\d+|\d+)\}\??</string>
          </dict>
          <dict>
            <key>name</key>
            <string>keyword.operator.or.regexp.ballerina</string>
            <key>match</key>
            <string>\|</string>
          </dict>
          <dict>
            <key>name</key>
            <string>meta.group.assertion.regexp.ballerina</string>
            <key>begin</key>
            <string>(\()</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\))</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.group.regexp.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#template-substitution-element</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#flags-on-off</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#unicode-property-escape</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.other.character-class.set.regexp.ballerina</string>
            <key>begin</key>
            <string>(\[)(\^)?</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.character-class.start.regexp.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.operator.negation.regexp.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\])</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.definition.character-class.end.regexp.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>name</key>
                <string>constant.other.character-class.range.regexp.ballerina</string>
                <key>match</key>
                <string>(?:.|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\[^pPu]))\-(?:[^\]\\]|(\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\[^pPu]))</string>
                <key>captures</key>
                <dict>
                  <key>1</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.numeric.regexp</string>
                  </dict>
                  <key>2</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.escape.backslash.regexp</string>
                  </dict>
                  <key>3</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.numeric.regexp</string>
                  </dict>
                  <key>4</key>
                  <dict>
                    <key>name</key>
                    <string>constant.character.escape.backslash.regexp</string>
                  </dict>
                </dict>
              </dict>
              <dict>
                <key>include</key>
                <string>#regex-character-class</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#unicode-values</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#unicode-property-escape</string>
              </dict>
            </array>
          </dict>
          <dict>
            <key>include</key>
            <string>#template-substitution-element</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#regex-character-class</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#unicode-values</string>
          </dict>
          <dict>
            <key>include</key>
            <string>#unicode-property-escape</string>
          </dict>
        </array>
      </dict>
      <key>regex-character-class</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.character-class.regexp.ballerina</string>
            <key>match</key>
            <string>\\[wWsSdDtrn]|\.</string>
          </dict>
          <dict>
            <key>name</key>
            <string>constant.character.escape.backslash.regexp</string>
            <key>match</key>
            <string>\\[^pPu]</string>
          </dict>
        </array>
      </dict>
      <key>unicode-property-escape</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.unicode-property.regexp.ballerina</string>
            <key>begin</key>
            <string>(\\p|\\P)(\{)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.unicode-property.regexp.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.other.unicode-property.begin.regexp.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\})</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.other.unicode-property.end.regexp.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regex-unicode-properties-general-category</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#regex-unicode-property-key</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>regex-unicode-property-key</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.unicode-property-key.regexp.ballerina</string>
            <key>begin</key>
            <string>(sc=|gc=)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.unicode-property-key.regexp.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>()</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.other.unicode-property.end.regexp.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regex-unicode-properties-general-category</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>regex-unicode-properties-general-category</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>match</key>
            <string>(Lu|Ll|Lt|Lm|Lo|L|Mn|Mc|Me|M|Nd|Nl|No|N|Pc|Pd|Ps|Pe|Pi|Pf|Po|P|Sm|Sc|Sk|So|S|Zs|Zl|Zp|Z|Cf|Cc|Cn|Co|C)</string>
            <key>name</key>
            <string>constant.other.unicode-property-general-category.regexp.ballerina</string>
          </dict>
        </array>
      </dict>
      <key>unicode-values</key>
      <dict>
        <key>patterns</key>
        <array>
          <dict>
            <key>name</key>
            <string>keyword.other.unicode-value.ballerina</string>
            <key>begin</key>
            <string>(\\u)(\{)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>keyword.other.unicode-value.regexp.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>punctuation.other.unicode-value.begin.regexp.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>(\})</string>
            <key>endCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.other.unicode-value.end.regexp.ballerina</string>
              </dict>
            </dict>
            <key>patterns</key>
            <array>
              <dict>
                <key>match</key>
                <string>([0-9A-Fa-f]{1,6})</string>
                <key>name</key>
                <string>constant.other.unicode-value.regexp.ballerina</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
      <key>flags-on-off</key>
      <dict>
        <key>name</key>
        <string>meta.flags.regexp.ballerina</string>
        <key>patterns</key>
        <array>
          <dict>
            <key>begin</key>
            <string>(\??)([imsx]*)(-?)([imsx]*)(:)</string>
            <key>beginCaptures</key>
            <dict>
              <key>1</key>
              <dict>
                <key>name</key>
                <string>punctuation.other.non-capturing-group-begin.regexp.ballerina</string>
              </dict>
              <key>2</key>
              <dict>
                <key>name</key>
                <string>keyword.other.non-capturing-group.flags-on.regexp.ballerina</string>
              </dict>
              <key>3</key>
              <dict>
                <key>name</key>
                <string>punctuation.other.non-capturing-group.off.regexp.ballerina</string>
              </dict>
              <key>4</key>
              <dict>
                <key>name</key>
                <string>keyword.other.non-capturing-group.flags-off.regexp.ballerina</string>
              </dict>
              <key>5</key>
              <dict>
                <key>name</key>
                <string>punctuation.other.non-capturing-group-end.regexp.ballerina</string>
              </dict>
            </dict>
            <key>end</key>
            <string>()</string>
            <key>name</key>
            <string>constant.other.flag.regexp.ballerina</string>
            <key>patterns</key>
            <array>
              <dict>
                <key>include</key>
                <string>#regexp</string>
              </dict>
              <dict>
                <key>include</key>
                <string>#template-substitution-element</string>
              </dict>
            </array>
          </dict>
        </array>
      </dict>
    </dict>
  </dict>
</plist>